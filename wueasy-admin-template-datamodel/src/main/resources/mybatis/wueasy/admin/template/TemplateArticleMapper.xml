<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
<![CDATA[
   wueasy - A Java Distributed Rapid Development Platform.
   Copyright (C) 2017-2018 wueasy.com
   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU Affero General Public License as published
   by the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU Affero General Public License for more details.

   You should have received a copy of the GNU Affero General Public License
   along with this program.  If not, see <https://www.gnu.org/licenses/>.
]]>
-->
<mapper namespace="com.wueasy.admin.template.mapper.TemplateArticleMapper">
  <resultMap id="BaseResultMap" type="com.wueasy.admin.template.entity.TemplateArticle">
    <id column="article_id" property="articleId" />
    <result column="title" property="title" />
    <result column="url" property="url" />
    <result column="author" property="author" />
    <result column="source" property="source" />
    <result column="is_hot" property="isHot" />
    <result column="is_head" property="isHead" />
    <result column="publish_date" property="publishDate" />
    <result column="catalog_id" property="catalogId" />
    <result column="site_id" property="siteId" />
    <result column="state" property="state" />
    <result column="hits" property="hits" />
    <result column="created_by" property="createdBy" />
    <result column="created_time" property="createdTime" />
    <result column="modified_by" property="modifiedBy" />
    <result column="modified_time" property="modifiedTime" />
  </resultMap>
  
  <sql id="Base_Column_List">
  	article_id
  	,title
  	,url
  	,author
  	,source
  	,is_hot
  	,is_head
  	,publish_date
  	,catalog_id
  	,site_id
  	,state
  	,hits
  	,created_by
  	,created_time
  	,modified_by
  	,modified_time
  </sql>
  
  
  <select id="select" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from template_article where 
     article_id = #{articleId,typeHandler=LongTypeHandler} and catalog_id = #{catalogId,typeHandler=LongTypeHandler} 
  </select>
  
  <select id="selectByArticleId" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from template_article where 
     article_id = #{articleId,typeHandler=LongTypeHandler}
  </select>
  
  <select id="query" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from template_article where catalog_id = #{catalogId,typeHandler=LongTypeHandler} 
      <if test="articleId != null and articleId != ''">
        and article_id = #{articleId,typeHandler=LongTypeHandler}
      </if>
      <if test="title != null and title != ''">
      	<bind name="pattern_title" value="'%' + _parameter.get('title') + '%'" />
        and title  LIKE #{pattern_title}
      </if>
      <if test="source != null and source != ''">
        and source = #{source,typeHandler=LongTypeHandler}
      </if>
      <if test="isHot != null and isHot != ''">
        and is_hot = #{isHot}
      </if>
      <if test="isHead != null and isHead != ''">
        and is_head = #{isHead}
      </if>
      <if test="siteId != null and siteId != ''">
        and site_id = #{siteId,typeHandler=LongTypeHandler}
      </if>
      <if test="state != null and state != ''">
        and state = #{state}
      </if>
      order by is_head desc,article_id desc
  </select>
  
  <delete id="delete">
    delete from template_article
    where 
       article_id = #{articleId,typeHandler=LongTypeHandler}
       and catalog_id = #{catalogId,typeHandler=LongTypeHandler} 
  </delete>
  
  
  <delete id="deleteMultiple">
    delete from template_article
    where 
    <bind name="articleIds" value="_parameter.get('articleId').split(',')" />
    
    <foreach collection="articleIds" item="item" index="index" open="" close="" separator="OR">
      article_id = #{item,typeHandler=LongTypeHandler}
    </foreach>
  </delete>
  
  
  <insert id="insert" useGeneratedKeys="true" keyProperty="articleId">
    insert into template_article (
  	title
  	,url
  	,author
  	,source
  	,is_hot
  	,is_head
  	,publish_date
  	,catalog_id
  	,site_id
  	,state
  	,hits
  	,created_by
  	,created_time
  	,modified_by
  	,modified_time
    )
    values (
  	#{title}
  	, #{url}
  	, #{author}
  	, #{source,typeHandler=LongTypeHandler}
  	, #{isHot}
  	, #{isHead}
  	, #{publishDate}
  	, #{catalogId,typeHandler=LongTypeHandler}
  	, #{siteId,typeHandler=LongTypeHandler}
  	, #{state}
  	, #{hits,typeHandler=LongTypeHandler}
  	, #{createdBy,typeHandler=LongTypeHandler}
  	, #{createdTime}
  	, #{modifiedBy,typeHandler=LongTypeHandler}
  	, #{modifiedTime}
    )
  </insert>
  
  <update id="update">
    update template_article
    set 
       title = #{title}
      , author = #{author}
      , source = #{source,typeHandler=LongTypeHandler}
      , is_hot = #{isHot}
      , is_head = #{isHead}
      , modified_by = #{modifiedBy,typeHandler=LongTypeHandler}
      , modified_time = #{modifiedTime}
    where
       article_id = #{articleId,typeHandler=LongTypeHandler}
  </update>
  
  <update id="updateState">
    update template_article
    set 
       state = #{state},
       publish_date = #{publishDate}
    where
       article_id = #{articleId,typeHandler=LongTypeHandler}
       and catalog_id = #{catalogId,typeHandler=LongTypeHandler}
  </update>
  
  <update id="updateArticleUrlById">
    update template_article
    set 
       url = #{url}
    where
       article_id = #{articleId,typeHandler=LongTypeHandler}
  </update>
  
</mapper>